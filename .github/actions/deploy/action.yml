name: "Deploy"
description: "Deploy docker image to namespace"
inputs:
  kube-cert:
    description: "Kubernetes cluster authentication certificate"
    required: true
  kube-token:
    description: "Kubernetes cluster authentication token"
    required: true
  kube-cluster:
    description: "Kubernetes cluster name"
    required: true
  kube-namespace:
    description: "Kubernetes cluster namespace"
    required: true
  app-environment:
    description: "environment to which the app is being deployed [staging, production, etc]"
    required: true
  ecr-repository:
    description: "ECR repository"
    required: true
  ecr-registry_url:
    description: "ECR registry url"
    required: true
  session_secret:
    description: "Session secret"
  service_name:
    description: "Service name"
  service_phase:
    description: "Service phase"
  department_name:
    description: "Department name"
  department_url:
    description: "Department url"
  contact_email:
    description: "Contact email"
  contact_phone:
    description: "Contact phone"
  service_url:
    description: "Service url"
  session_name:
    description: "Session name"
  ratelimit_headers_enabled:
    description: "Rate limit headers enabled"
  ratelimit_storage_uri:
    description: "Rate limit storage uri"
  ratelimit_max:
    description: "Rate limit max"
  ratewindow_ms:
    description: "Rate limit max"
  slack_webhook_url:
    description: "Slack webhook url"
  api_url:
    description: "API base URL"
  api_key:
    description: "API authentication key"
  api_timeout:
    description: "API request timeout in milliseconds"
  api_retries:
    description: "Number of API retry attempts"

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to the cluster
      uses: ministryofjustice/laa-reusable-github-actions/.github/actions/authenticate_to_cluster@2aa2676c3cd9876ec7037ee8b3d729d0306cb7c6
      with:
        kube-cert: ${{ inputs.kube-cert }}
        kube-token: ${{ inputs.kube-token }}
        kube-cluster: ${{ inputs.kube-cluster }}
        kube-namespace: ${{ inputs.kube-namespace }}

    - name: Deploy infrastructure to UAT
      shell: bash
      run: |
        if [ ${{ inputs.app-environment }} == 'uat' ]
        then
          kubectl apply --record=false -f ./infrastructure/laa-manage-your-civil-cases-uat/
        fi

    - name: Set environment variables
      shell: bash
      run: |
        echo "SERVICE_NAME=${{ inputs.service_name || 'Manage your civil cases' }}" >> $GITHUB_ENV
        echo "SERVICE_PHASE=${{ inputs.service_phase || 'Beta' }}" >> $GITHUB_ENV
        echo "DEPARTMENT_NAME=${{ inputs.department_name || 'Legal Aid Agency' }}" >> $GITHUB_ENV
        echo "DEPARTMENT_URL=${{ inputs.department_url || 'https://www.gov.uk/government/organisations/legal-aid-agency' }}" >> $GITHUB_ENV
        echo "CONTACT_EMAIL=${{ inputs.contact_email || 'eligibility@justice.gov.uk' }}" >> $GITHUB_ENV
        echo "CONTACT_PHONE=${{ inputs.contact_email || '' }}" >> $GITHUB_ENV
        echo "SERVICE_URL=${{ inputs.service_url || 'https://www.gov.uk/legal-aid' }}" >> $GITHUB_ENV
        echo "SESSION_SECRET=${{ inputs.sessions_secret || 'default-session-secret' }}" >> $GITHUB_ENV
        echo "SESSION_NAME=${{ inputs.session_name || 'sessionId' }}" >> $GITHUB_ENV
        echo "RATELIMIT_HEADERS_ENABLED=${{ inputs.ratelimit_headers_enabled || 'true' }}" >> $GITHUB_ENV
        echo "RATELIMIT_STORAGE_URI=${{ inputs.ratelimit_storage_uri || '' }}" >> $GITHUB_ENV
        echo "RATE_LIMIT_MAX=${{ inputs.ratelimit_max || '100' }}" >> $GITHUB_ENV
        echo "RATE_WINDOW_MS=${{ inputs.ratewindow_ms || '900000' }}" >> $GITHUB_ENV
        echo "API_URL=${{ inputs.api_url || '' }}" >> $GITHUB_ENV
        echo "API_KEY=${{ inputs.api_key || '' }}" >> $GITHUB_ENV
        echo "API_TIMEOUT=${{ inputs.api_timeout || '5000' }}" >> $GITHUB_ENV
        echo "API_RETRIES=${{ inputs.api_retries || '3' }}" >> $GITHUB_ENV
        echo "NODE_ENV=production" >> $GITHUB_ENV

    - name: Deploy using Helm
      shell: bash
      run: ./scripts/deploy.sh ${{ inputs.app-environment }}
      env:
        REGISTRY: ${{ inputs.ecr-registry_url }}
        REPOSITORY: ${{ inputs.ecr-repository }}
        IMAGE_TAG: ${{ github.sha }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_REF_NAME: ${{ github.ref_name }}
        K8S_NAMESPACE: ${{ inputs.kube-namespace }}

    - name: Notify deployment failure
      shell: bash
      if: failure()
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Manage Civil Cases deployment to ${{ inputs.app-environment }} failed!"}' ${{ inputs.slack_webhook_url }}
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack_webhook_url }}
